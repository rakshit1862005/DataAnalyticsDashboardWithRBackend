# Make the POST request
response <- POST(
url = "https://api.openai.com/v1/completions",
body = data,
encode = "json",
add_headers(Authorization = paste("Bearer", api_key))
)
# Print the response from the API
print(content(response, as = "text"))
gptstudio:::gptstudio_chat()
chattr:::chattr_app()
chattr:::chattr()
chattr:::chattr()
chattr:::chattr_app()
source("~/R/A1(A).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
a<-c(1,2,3,1,3,4,3,9,9)
hist(c(1,2,3,1,3,4,3,9,9),xlab="X",ylab="Y",xlim=c(0,10),ylim=c(0,10))
curve(dnorm(x, mean = mean(a), sd = std(a)), from = -10, to = 10,add=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
x<-runif(10000,min=1,max=1000)
plot(x, dbeta(x, shape1 = 2, shape2 = 5)
x<-runif(10000,min=1,max=1000)
x<-runif(10000,min=1,max=1000)
plot(x, y, type = "l", col = "blue", main = "Beta(2,5) Density", xlab = "x", ylab = "Density")
df<-rgamma(100,shape=1,scale=1000)
lines(density(df))
source("~/.active-rstudio-document", echo=TRUE)
df<-rgamma(100,shape=1,scale=1000)
lines(density(df))
df<-rgamma(100,shape=1,scale=1000)
lines(density(df))
df<-rgamma(100,shape=1,scale=1000)
lines(density(df))
source("~/.active-rstudio-document", echo=TRUE)
curve(density(df))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
curve(dnorm(x, mean = mean(a), sd = sd(a)),
from = min(a)-2, to = max(a)+2, add = TRUE, col = "blue", lwd = 2)
df<-rgamma(100,shape=1,scale=1000)
lines(density(df))
lines(density(df))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
function (x, df1, df2, ncp, log = FALSE)
source("~/.active-rstudio-document", echo=TRUE)
lines(density(df))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
lines(density(zcon))
lines(density(zcon))
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
gptstudio:::gptstudio_chat()
source("~/R/A3_1.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A5.R", echo=TRUE)
source("~/R/A5.R", echo=TRUE)
source("~/R/A5.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
df<-29
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A5.R", echo=TRUE)
source("~/R/A2(A,B,C).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
chattr:::chattr_app()
source("~/R/A5.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A2(A,B,C).R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A5.R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A5.R", echo=TRUE)
source("~/R/A5.R", echo=TRUE)
source("~/R/A5.R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R/A1(A).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A2(A,B,C).R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A1(A).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A2(A,B,C).R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/Assignment5.R", echo=TRUE)
source("~/R/Assignment5.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
install.packages("DAAG")
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
?ais
gptstudio:::gptstudio_chat()
chattr:::chattr()
chattr:::chattr_app()
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A2(A,B,C).R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A4.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
df2<-data.frame(ais$hc,ais$hg)
df2
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A1(A).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A2(A,B,C).R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/Assignment5.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A1(A).R", echo=TRUE)
source("~/R/A1(B).R", echo=TRUE)
source("~/R/A2(A,B,C).R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A1(A).R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
source("~/R/A3_1.R", echo=TRUE)
shiny::runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)/App.R')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
shiny::runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
source("~/R/A6.R", echo=TRUE)
source("~/R/A4.R", echo=TRUE)
source("~/R/A4.R", echo=TRUE)
source("~/R/A4.R", echo=TRUE)
source("~/R/A4.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A4.R", echo=TRUE)
source("~/R/A4.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A4.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
source("~/R/A6.R", echo=TRUE)
shiny::runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
runApp('A:/Project(DAV)')
source("~/.active-rstudio-document", echo=TRUE)
plumb(file='A:/DAV-Project(Final)/api.R')$run()
source("accident_analysis.R")
source("analysis.R")
source("analysis.R")
source("analysis.R")
source("Analysis.R")
source("analysis.R")
source("A:\DAV-Project(Final)\analysis.R")
source(r"A:\DAV-Project(Final)\analysis.R")
plumber::plumb(file='A:/DAV-Project(Final)/api.R')$run()
#* @get/sum
function(x,y){
return(x+y)
}
plumber::plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumber::plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
pr <- plumber::plumb("api.R")
pr <- plumber::plumb("A:\DAV-Project(Final)\api.R")
pr <- plumber::plumb(r"A:\DAV-Project(Final)\api.R")
pr <- plumber::plumb("A:\\DAV-Project(Final)\\api.R")
# Add CORS headers
pr$handle("preflight", "*", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
res$status <- 204
return(res)
})
# Add CORS headers
pr$handle("preflight", "*", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
res$status <- 204
return(res)
})
pr <- plumber::plumb("A:/DAV-Project(Final)/api.R")
# Add CORS headers
pr$handle("preflight", "*", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
res$status <- 204
return(res)
})
# Add CORS headers
pr$handle("preflight", "*", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
res$status <- 204
return(res)
})
pr$registerHooks(
list(
preroute = function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
}
)
)
pr$run(port = 8000)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
plumb(file='A:/DAV-Project(Final)/api.R')$run()
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
plumb(file='A:/DAV-Project(Final)/api.R')$run()
plumb(file='A:/DAV-Project(Final)/api.R')$run()
source("A:/DAV-Project(Final)/apionport8000.R", echo=TRUE)
